class Solution:
    def minSpeedOnTime(self, dist: List[int], hour: float) -> int:
        if len(dist) -1 >= hour:
            return -1
        
        def solve(mid):
            ans = 0
            for i in range(len(dist)):
                num = float(dist[i] / mid)
                num2 = float(int(dist[i] / mid))
                if num == num2:
                    ans += num
                elif num < num2:
                    ans += num2
                else:
                    if i < len(dist)-1:
                        ans += num2 +1
                    else:
                        ans += num
                if ans > hour:
                    return False
            return True if ans <= hour else False
        
        print(solve(10))
        #return 0
        left = 1
        right = 10 ** 7
        while left < right:
            mid = (left + right) // 2
            if solve(mid):
                right = mid -1
            else:
                left = mid +1
        return left if solve(left) else left+1
