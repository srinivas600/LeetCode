class Solution:
    def furthestBuilding(self, heights: List[int], bricks: int, ladders: int) -> int:
        def solve(index):
            ans = 0
            diff = []
            for i in range(1, index+1):
                if i < len(heights) and heights[i] - heights[i-1] > 0:
                    diff.append(heights[i] - heights[i-1])
            diff.sort(reverse = True)
            k = ladders
            for i in diff:
                if k > 0:
                    k -= 1
                else:
                    ans += i
            return ans <= bricks
        left = 0
        right = len(heights) -1
        while left <= right:
            mid = (left + right) // 2
            if solve(mid):
                left = mid + 1
            else:
                right = mid - 1
        #print(left, right)
        if not solve(left) and right == -1:
            return 0
        return left if solve(left) and left < len(heights) else right
