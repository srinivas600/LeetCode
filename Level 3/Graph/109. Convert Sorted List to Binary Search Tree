# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sortedListToBST(self, head: Optional[ListNode]) -> Optional[TreeNode]:
        nums = []
        while head:
            nums.append(head.val)
            head = head.next
        start = 0
        end = len(nums) -1
        def solve(start, end):
            if start > end: 
                return None
            mid = (start + end) // 2
            root = TreeNode(nums[mid])
            root.left = solve(start, mid-1)
            root.right = solve(mid+1, end)
            return root
        return solve(start, end)
