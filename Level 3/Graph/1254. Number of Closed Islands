class Solution:
    def closedIsland(self, grid: List[List[int]]) -> int:
        rows = len(grid)
        coloms = len(grid[0])
        def dfs(row, col):
            if row >= rows or row < 0 or col < 0 or col >= coloms:
                return
            if grid[row][col] == 1:
                return 
            grid[row][col] = 1
            dfs(row+1, col)
            dfs(row-1, col)
            dfs(row, col+1)
            dfs(row, col-1)

        for i in range(rows):
            for j in range(coloms):
                if i == 0 or j == 0 or j == coloms -1 or i == rows -1:
                    dfs(i, j)
        c = 0
        for i in range(rows):
            for j in range(coloms):
                if grid[i][j] == 0:
                    dfs(i, j)
                    c += 1
        return c
